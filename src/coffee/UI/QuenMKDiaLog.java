/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package coffee.UI;

import coffee.Utils.MsgBox;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;

/**
 *
 * @author Đặng Thành Trung
 */
public class QuenMKDiaLog extends javax.swing.JDialog {

    /**
     * Creates new form QuenMKDiaLog
     */
    public QuenMKDiaLog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panldemo = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtTaiKhoan = new javax.swing.JTextField();
        btnTimKiem = new javax.swing.JButton();
        btnTroVe = new javax.swing.JButton();
        lblEmail = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        Panldemo.setBackground(new java.awt.Color(255, 204, 204));

        jLabel2.setBackground(new java.awt.Color(51, 51, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 255));
        jLabel2.setText("Nhập vào tài khoản của bạn");

        txtTaiKhoan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtTaiKhoan.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTaiKhoan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTaiKhoanKeyReleased(evt);
            }
        });

        btnTimKiem.setBackground(new java.awt.Color(204, 204, 255));
        btnTimKiem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/coffee/iicon/Search.png"))); // NOI18N
        btnTimKiem.setText("Tìm Kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnTroVe.setBackground(new java.awt.Color(204, 204, 255));
        btnTroVe.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnTroVe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/coffee/iicon/logout.png"))); // NOI18N
        btnTroVe.setText("Trở về");
        btnTroVe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTroVeActionPerformed(evt);
            }
        });

        lblEmail.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 0, 0));
        lblEmail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout PanldemoLayout = new javax.swing.GroupLayout(Panldemo);
        Panldemo.setLayout(PanldemoLayout);
        PanldemoLayout.setHorizontalGroup(
            PanldemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanldemoLayout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addGroup(PanldemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PanldemoLayout.createSequentialGroup()
                        .addComponent(btnTimKiem)
                        .addGap(124, 124, 124)
                        .addComponent(btnTroVe, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanldemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanldemoLayout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(13, 13, 13))
                        .addComponent(lblEmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(94, Short.MAX_VALUE))
        );
        PanldemoLayout.setVerticalGroup(
            PanldemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanldemoLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtTaiKhoan, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(PanldemoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTroVe)
                    .addComponent(btnTimKiem))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Panldemo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Panldemo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        TimKiem();
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnTroVeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTroVeActionPerformed
        troVe();
    }//GEN-LAST:event_btnTroVeActionPerformed

    private void txtTaiKhoanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTaiKhoanKeyReleased
        released();
    }//GEN-LAST:event_txtTaiKhoanKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuenMKDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuenMKDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuenMKDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuenMKDiaLog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuenMKDiaLog dialog = new QuenMKDiaLog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panldemo;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnTroVe;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JTextField txtTaiKhoan;
    // End of variables declaration//GEN-END:variables

    String tkemail;
    String username = "dangthanhtrung57@gmail.com";
    String password = "yyntnvjelnmjhjiq";

    void released() {
        String username = txtTaiKhoan.getText();
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Coffee";
            Connection con = DriverManager.getConnection(url, "sa", "123456");
            PreparedStatement ps = con.prepareStatement("select Email from NhanVien where MaNV = '" + username + "'");
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                lblEmail.setText("Email: "+rs.getString(1));
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    void TimKiem() {
        if (validatee() == true) {
            String username = txtTaiKhoan.getText();
            try {
                Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
                String url = "jdbc:sqlserver://localhost:1433;databaseName=Coffee";
                Connection con = DriverManager.getConnection(url, "sa", "123456");
                PreparedStatement ps = con.prepareStatement("select Email from NhanVien where MaNV = '" + username + "'");
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    tkemail = rs.getString(1);
                    int tam = JOptionPane.showConfirmDialog(this, "Chúng tôi sẽ gửi một mật khẩu đến Gmail\n" + rs.getString(1) + "?", "Xác Nhận",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE);
                    if (tam == JOptionPane.YES_NO_OPTION) {
                        this.Email();
                    }

                } else {
                    MsgBox.alert(this, "Tài khoản này không tồn tại!");
                    con.close();
                    rs.close();
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }

    boolean validatee() {
        if (txtTaiKhoan.getText().trim().length() == 0) {
            txtTaiKhoan.requestFocus();
            MsgBox.alert(this, "mời bạn nhập tài khoản của bạn");
            return false;
        }
        return true;
    }

    void Email() {
        try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String url = "jdbc:sqlserver://localhost:1433;databaseName=Coffee";
            Connection con = DriverManager.getConnection(url, "sa", "123456");
            PreparedStatement ps = con.prepareStatement("select MatKhau from NhanVien where MaNV = '" + txtTaiKhoan.getText() + "'");
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                String mk = rs.getString(1);
                Properties prop = new Properties();
                prop.put("mail.smtp.host", "smtp.gmail.com");
                prop.put("mail.smtp.port", "587");
                prop.put("mail.smtp.auth", "true");
                prop.put("mail.smtp.starttls.enable", "true"); //TLS
                // đăng nhập email
                Session session = Session.getInstance(prop,
                        new javax.mail.Authenticator() {
                    protected PasswordAuthentication getPasswordAuthentication() {
                        return new PasswordAuthentication(username, password);
                    }
                });

                try {
                    Message message = new MimeMessage(session);
                    message.setFrom(new InternetAddress("dangthanhtrung57@gmail.com"));
                    message.setRecipients(
                            Message.RecipientType.TO,
                            InternetAddress.parse(tkemail)
                    );
                    message.setSubject("MẬT KHẨU QUẢN LÝ COFFEE");
                    message.setText("Mật khẩu tài khoản của bạn là:" + mk);

                    Transport.send(message);
                    JOptionPane.showMessageDialog(this, "Mật khẩu của bạn đã được gửi về Email của bạn!");
                    System.out.println("Done");

                } catch (MessagingException e) {
                    e.printStackTrace();
                }
            }
        } catch (Exception e) {
            //------
        }
    }

    void troVe() {
        this.dispose();
        new DangNhapDialog(null, true).setVisible(true);
    }

}
